/**
 * File:	clients/mail-server.ycp
 * Package:	Configuration of mail-server
 * Summary:	Main file
 * Authors:	Peter Varkoly <varkoly@suse.de>
 *
 * $Id: mail-server.ycp 19955 2004-10-26 12:28:16Z varkoly $
 *
 * Main file for mail-server configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of mail-server</h3>
 */

textdomain "mail";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("MailServer module started");

import "Progress";
import "Report";
import "Summary";
import "Popup";
import "Label";

import "CommandLine";
include "mail/mail-server_wizards.ycp";

/**
 * Command line "setup" commands handler.
 *
 * @param options       map of options from command line
 * @return boolean      true on success
 */
boolean SetupMailServer()
{
	any ret = SetupSequence();
	return true;
}

map cmdline_description =
$[
    "id"	: "mail-server",
    /* Command line help text for the mail-server module */
    "help"	: _("Configuration of mail server"),
    "guihandler"        : MailServerSequence,
    // "initialize"        : MailServer::CheckPackages,
    // "finish"            : MailServer::Write,
    "actions"           : $[
	"setup" : $[
                "handler"       : SetupMailServer,
                "help"          : _("Advanced Mail Server setup with LDAP backend"),
       ],
    ],
    "options"		: $[
	// FIXME TODO: fill the option descriptions here
    ],
    "mapping"		: $[
	// FIXME TODO: fill the mappings of actions and options here
    ]
];

/* analyze command line */
boolean propose = false;
boolean setup   = false;
list args = WFM::Args();
if(size(args) > 0) {
    if(is(WFM::Args(0), path) && WFM::Args(0) == .propose) {
        y2milestone("Using PROPOSE mode");
        propose = true;
    }
    if(contains(args,"setup")) {
        y2milestone("Using setup mode");
        setup = true;
    }
}

/* main ui function */
any ret = nil;

if(propose)
{
	 ret = MailServerAutoSequence();
}
else if(setup)
{
	 ret = SetupSequence();
}
else
{
	 ret = CommandLine::Run(cmdline_description);
}

y2debug("ret=%1", ret);

/* Finish */
y2milestone("MailServer module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
