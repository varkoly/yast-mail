/**
 * File:
 *   clients/mail-server-ldap-setup.ycp
 *
 * Package:
 *   Configuration of mail
 *
 * Summary:
 *   Setup of a LDAP server to be able store the mail server datas
 *
 * Authors:
 *   Peter Varkoly <varkoly@novell.com>
 *
 * $Id: mail.ycp 37642 2007-04-20 19:06:52Z varkoly $
 *
 *
 */

{
textdomain "mail";
import     "Ldap";
import     "MailServerLDAP";
import     "YaPI::MailServer";
import     "Package";
import     "Report";
import     "Label";

    string ERROR = "";
    list args = WFM::Args();
    string         to_install = "";
    list<string> l_to_install = [];


    y2milestone("--- mail-server-ldap-setup ---");
    // First we check if all requested modules are installed
    if( !Package::Installed ( "ldap-server" ) )
    {
	l_to_install = add( l_to_install, "yast2-ldap-server" );
	to_install   = to_install + "yast2-ldap-server\n";
    }
    if(contains(args,"ca_mgm") )
    {
	if( !Package::Installed ( "yast2-ca-management" ) )
	{
		l_to_install = add( l_to_install, "yast2-ca-management" );
		to_install   = to_install + "yast2-ca-management\n";
	}
    }
    if(to_install != "")
    {
        if ( Report::AnyQuestion ("",_("You have not installed all needed packages.") +
                                  "\n"+to_install+"\n",
                                  Label::InstallButton(),
                                  Label::AbortButton(),
                                  `focus_yes))
        {
            Package::DoInstall(l_to_install);
        }
        else
        {
            return false;
        }
    }

    //Now we start the requested modules
    if(contains(args,"ca_mgm") )
	WFM::CallFunction("ca_mgm",[]);
    }
    if(contains(args,"setup") )
    {
	WFM::CallFunction("ldap-server",[]);
    }
    MailServerLDAP::ConfigureLDAPServer(LDAPSettings);
    Ldap::Read();
    Ldap::LDAPInit();
    map LDAPSettings = Ldap::Export();
    string adminpw = Ldap::LDAPAskAndBind(false);
    if( adminpw != nil )
    {
        YaPI::MailServer::ResetMailServer(adminpw,LDAPSettings);
    }
    else
    {
	return false;
    }
    return true;
}
