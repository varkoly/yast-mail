#
# test library for External Parser AGents
# Martin Vidner <mvidner@suse.cz>
# adapted from testsuite-run of yast2-testsuite
#


proc run_epag_tests { agent_basename } {
    global srcdir

    set test_cases [lsort [glob $srcdir/tests.epag/*.run]]
    set agent "$srcdir/../agents/$agent_basename"

    foreach test_case $test_cases {
	run_case $test_case $agent
    }
}

# helper
proc llast { alist } {
    return [lindex $alist [expr [llength $alist]-1]]
}

# $run - the test case control file
# $ag  - agent executable
proc run_case { run ag } {
    global srcdir

    # extract basename and check extension
    set path [split $run "/"]
    set filename [llast $path]
    set filename_l [split $filename "."]
    # setup filenames
    set base_name [lindex $filename_l 0]
    # TODO better path, using srcdir
    set tests_ag "$srcdir/tests.epag"
    # TODO better path, using srcdir
    set tmpdir "./tmp"
    # $run is the name of the original testfile with absolute path
    # tests.ag/$filename is the name of the original testfile
    # with relative path, relative to the testsuite directory

    set r_data_name "$tests_ag/$base_name.r.data"
    set rw_ycp_name "$tests_ag/$base_name.rw.ycp"
    set rw_ycp_tmp_name "$tmpdir/$base_name.rw.ycp.tmp"
    set w_data_name "$tests_ag/$base_name.w.data"
    set w_data_tmp_name "$tmpdir/$base_name.w.data.tmp"

    # indented by one space
    puts " Running $run ..."

    if {[regexp ".*\.r\.run" $run]} {
	if {[run-one "read"  $r_data_name $rw_ycp_name $rw_ycp_tmp_name $run $ag] != 0 } {
	    return -1
	}
    } elseif {[regexp ".*\.w\.run" $run]} {
	if {[run-one "write" $rw_ycp_name $w_data_name $w_data_tmp_name $run $ag] != 0} {
	    return -1
	}
    } else {
	warning "Don't know how to run $run"
    }

    return 0
}

proc run-one { mode in_f out_f out_tmp_f run ag } {
  # run the test

  set result ""
  set oops [catch {
      set result [exec "run/runtest-epag.sh" "$mode" "$in_f" "$out_f" "$out_tmp_f" "$run" "$ag" ]
  } catched]

  if {$oops != 0} {
    fail "Test case failed for $run:\n$catched"
    return -1
  }

  # check return code - ???
  if {$result != ""} {
    warning "Compilation of $run results in '$result'"
    return -1
  }

  pass $run
  return 0
}
